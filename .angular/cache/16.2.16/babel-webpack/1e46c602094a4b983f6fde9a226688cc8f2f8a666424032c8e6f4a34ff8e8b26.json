{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./environment-url.service\";\nimport * as i3 from \"@auth0/angular-jwt\";\nexport class AuthenticationService {\n  constructor(http, envUrl, jwtHelper) {\n    this.http = http;\n    this.envUrl = envUrl;\n    this.jwtHelper = jwtHelper;\n    this.authChangeSub = new Subject();\n    this.authChanged = this.authChangeSub.asObservable();\n    this.token = sessionStorage.getItem('token') ?? '';\n    this.Postheaders = new HttpHeaders().set('Authorization', this.token).set('Content-Type', 'application/json');\n    this.Getheaders = new HttpHeaders().set('Authorization', this.token);\n    this.userId = '';\n    this.authToken = '';\n    this.branch_id = '';\n    this.loginUser = (route, body) => {\n      const headers = new HttpHeaders();\n      return this.http.post(this.createCompleteRoute(route, this.envUrl.urlAddress), body, {\n        headers\n      });\n    };\n    this.isUserAuthenticated = () => {\n      const token = sessionStorage.getItem('token');\n      return !this.jwtHelper.isTokenExpired(token);\n    };\n    this.sendAuthStateChangeNotification = isAuthenticated => {\n      this.authChangeSub.next(isAuthenticated);\n    };\n    this.logout = () => {\n      sessionStorage.removeItem(\"token\");\n      this.sendAuthStateChangeNotification(false);\n    };\n    this.getAuthUserName = () => {\n      const token = sessionStorage.getItem('token');\n      const decodedToken = this.jwtHelper.decodeToken(this.token);\n      if (decodedToken != null) {\n        const username = decodedToken.username;\n        return username;\n      }\n    };\n    this.createCompleteRoute = (route, envAddress) => {\n      return `${envAddress}/${route}`;\n    };\n  }\n  setAuthData(token, userId, branchId) {\n    this.authToken = token;\n    this.userId = userId;\n    this.branch_id = branchId;\n    sessionStorage.setItem('token', token);\n    sessionStorage.setItem('userId', userId);\n    localStorage.setItem('branch_id', branchId);\n  }\n  getAuthToken() {\n    return sessionStorage.getItem('authToken');\n  }\n  getBranchId() {\n    return localStorage.getItem('branch_id');\n  }\n  getUserId() {\n    return sessionStorage.getItem('userId');\n  }\n  static {\n    this.ɵfac = function AuthenticationService_Factory(t) {\n      return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.EnvironmentUrlService), i0.ɵɵinject(i3.JwtHelperService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthenticationService,\n      factory: AuthenticationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","Subject","AuthenticationService","constructor","http","envUrl","jwtHelper","authChangeSub","authChanged","asObservable","token","sessionStorage","getItem","Postheaders","set","Getheaders","userId","authToken","branch_id","loginUser","route","body","headers","post","createCompleteRoute","urlAddress","isUserAuthenticated","isTokenExpired","sendAuthStateChangeNotification","isAuthenticated","next","logout","removeItem","getAuthUserName","decodedToken","decodeToken","username","envAddress","setAuthData","branchId","setItem","localStorage","getAuthToken","getBranchId","getUserId","i0","ɵɵinject","i1","HttpClient","i2","EnvironmentUrlService","i3","JwtHelperService","factory","ɵfac","providedIn"],"sources":["D:\\Web Corporation Ltd\\webVfd-Report\\src\\app\\shared\\services\\authentication.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders,HttpParams  } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { JwtHelperService,} from '@auth0/angular-jwt';\r\nimport { EnvironmentUrlService } from './environment-url.service';\r\nimport { Login } from 'src/interfaces/authentication/login.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthenticationService {\r\n  public authChangeSub = new Subject<boolean>()\r\n  public authChanged = this.authChangeSub.asObservable();\r\n\r\n  constructor(private http: HttpClient, private envUrl: EnvironmentUrlService,private jwtHelper: JwtHelperService) { }\r\n  token = sessionStorage.getItem('token')??'';\r\n\r\n  \r\n  Postheaders = new HttpHeaders()\r\n  .set('Authorization', this.token)\r\n  .set('Content-Type', 'application/json');\r\n\r\n  Getheaders = new HttpHeaders()\r\n  .set('Authorization', this.token);\r\n\r\n  private userId: string ='';\r\n  private authToken: string ='';\r\n  private branch_id: string ='';\r\n\r\n\r\n  public loginUser = (route: string, body: Login) =>\r\n  {\r\n      const headers = new HttpHeaders()\r\n      return this.http.post<loginResponse>(this.createCompleteRoute(route, this.envUrl.urlAddress),body,{ headers });\r\n  }\r\n\r\n  \r\n  public isUserAuthenticated = (): boolean => {\r\n    const token = sessionStorage.getItem('token');\r\n  \r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n\r\n  public sendAuthStateChangeNotification = (isAuthenticated: boolean) => {\r\n    this.authChangeSub.next(isAuthenticated);\r\n  }\r\n\r\n\r\n  public logout = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    this.sendAuthStateChangeNotification(false);\r\n\r\n  }\r\n\r\n \r\n\r\n\r\n  public getAuthUserName = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    const decodedToken = this.jwtHelper.decodeToken(this.token);\r\n    if(decodedToken!=null){\r\n      const username = decodedToken.username;\r\n      return username;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  setAuthData(token: string, userId: string,branchId:string) {\r\n    this.authToken = token;\r\n    this.userId = userId;\r\n    this.branch_id = branchId;\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('userId', userId);\r\n    localStorage.setItem('branch_id', branchId);\r\n  }\r\n\r\n\r\n  getAuthToken(): string | null {\r\n    return sessionStorage.getItem('authToken');\r\n  }\r\n\r\n\r\n  getBranchId(): string | null {\r\n    return localStorage.getItem('branch_id');\r\n  }\r\n\r\n  getUserId(): string | null {\r\n    return sessionStorage.getItem('userId');\r\n  }\r\n\r\n\r\n  private createCompleteRoute = (route: string, envAddress: string) => {\r\n    return `${envAddress}/${route}`;\r\n  }\r\n\r\n\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}