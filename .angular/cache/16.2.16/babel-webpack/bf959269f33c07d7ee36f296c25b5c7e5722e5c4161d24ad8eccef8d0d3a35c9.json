{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, el, router, route, renderer, fb) {\n    this.authService = authService;\n    this.el = el;\n    this.router = router;\n    this.route = route;\n    this.renderer = renderer;\n    this.fb = fb;\n    this.returnUrl = '';\n    this.showPassword = false;\n    this.showError = false;\n    this.validateControl = controlName => {\n      const control = this.loginForm?.get(controlName);\n      return control ? control.invalid && control.touched : false;\n    };\n    this.hasError = (controlName, errorName) => {\n      const control = this.loginForm?.get(controlName);\n      return control ? control.hasError(errorName) : false;\n    };\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.createLoginUser(this.loginForm.value);\n    }\n  }\n  createLoginUser(loginFormValue) {\n    this.loading = true;\n    const loginAuth = {\n      username: loginFormValue.username,\n      password: loginFormValue.password\n    };\n    const apiUrl = 'login';\n    this.authService.loginUser(apiUrl, loginAuth).subscribe({\n      next: response => {\n        this.loading = false;\n        if (!response.token) {\n          this.handleError('Something went wrong.');\n        } else {\n          this.authService.setAuthData('Bearer ' + response.token, response.id, response.branchId);\n          this.router.navigate([this.returnUrl]).then(() => {\n            this.reloadDashboard();\n          });\n        }\n      },\n      error: err => {\n        if (err.status === 404) {\n          this.handleError('User not found.');\n        } else if (err.status === 401) {\n          this.handleError('Wrong Username Or Password');\n        } else if (err.status === 502) {\n          this.handleError('Bad Gateway. Please try again later.');\n        } else if (err.status === 0) {\n          this.handleError('No internet connection or network error');\n        } else {\n          this.handleError('An unexpected error occurred.');\n        }\n      }\n    });\n  }\n  handleError(message) {\n    this.errorDetails = message;\n    this.showError = true;\n    setTimeout(() => {\n      this.errorDetails = '';\n      this.showError = false;\n    }, 3000);\n    this.loading = false;\n  }\n  reloadDashboard() {\n    window.location.href = window.location.href;\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","authService","el","router","route","renderer","fb","returnUrl","showPassword","showError","validateControl","controlName","control","loginForm","get","invalid","touched","hasError","errorName","ngOnInit","group","username","required","password","snapshot","queryParams","onSubmit","valid","createLoginUser","value","loginFormValue","loading","loginAuth","apiUrl","loginUser","subscribe","next","response","token","handleError","setAuthData","id","branchId","navigate","then","reloadDashboard","error","err","status","message","errorDetails","setTimeout","window","location","href","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Web Corporation Ltd\\webVfd-Report\\src\\app\\authentication\\login\\login.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, ElementRef, Renderer2 } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Login } from 'src/app/interfaces/authentication/login.model';\nimport { loginResponse } from 'src/app/interfaces/response/loginResponse.model';\nimport { AuthenticationService } from 'src/app/shared/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n     loading:boolean | undefined;\n     private returnUrl: string = '';\n      showPassword: boolean = false;\n      loginForm!: FormGroup;\n      showError: boolean = false;\n      errorMessages!: string | null;\n      errorDetails: any;\n      constructor(\n              private authService:AuthenticationService,\n              private el: ElementRef,\n              private router: Router, private route: ActivatedRoute,\n              private renderer: Renderer2,\n              private fb: FormBuilder,\n              ) { }\n\n            ngOnInit(): void {\n              this.loginForm = this.fb.group({\n                username: ['', Validators.required],\n                password: ['', Validators.required]\n              });\n              this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n            }\n\n            onSubmit(): void {\n              if (this.loginForm.valid) {\n                this.createLoginUser(this.loginForm.value);\n              }\n            }\n\n            createLoginUser(loginFormValue: any): void {\n              this.loading=true;\n              const loginAuth: Login = {\n                  username: loginFormValue.username,\n                  password: loginFormValue.password\n              };\n              const apiUrl = 'login';\n              this.authService.loginUser(apiUrl, loginAuth).subscribe({\n                  next: (response: loginResponse) => {\n                    this.loading=false;\n                      if (!response.token) {\n                          this.handleError('Something went wrong.');\n                      } else {\n                        this.authService.setAuthData('Bearer ' + response.token,response.id,response.branchId);\n                         this.router.navigate([this.returnUrl]).then(() => {\n                           this.reloadDashboard(); \n                          });\n                      }\n                  },\n                  error: (err: HttpErrorResponse) => {\n                  \n                      if (err.status === 404) {\n                          this.handleError('User not found.');\n                      } else if (err.status === 401) {\n                          this.handleError('Wrong Username Or Password');\n                      } else if (err.status === 502) {\n                          \n                          this.handleError('Bad Gateway. Please try again later.');\n                      } else if(err.status === 0){\n                        this.handleError('No internet connection or network error');\n                      }   \n                      else {\n                          this.handleError('An unexpected error occurred.');\n                      }\n                  }\n              });\n          }\n      \n          private handleError(message: string): void {\n              this.errorDetails = message;\n              this.showError = true;\n              setTimeout(() => {\n                  this.errorDetails = '';\n                  this.showError = false;\n              }, 3000); \n              this.loading=false;\n\n          }\n      \n\n            validateControl = (controlName: string) => {\n              const control = this.loginForm?.get(controlName);\n              return control ? control.invalid && control.touched : false;\n          }\n\n          hasError = (controlName: string, errorName: string) => {\n              const control = this.loginForm?.get(controlName);\n              return control ? control.hasError(errorName) : false;\n          }\n\n            reloadDashboard() {\n              window.location.href = window.location.href;\n            }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAA+B,eAAe;AAChE,SAAiCC,UAAU,QAAQ,gBAAgB;AAW5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAQrBC,YACgBC,WAAiC,EACjCC,EAAc,EACdC,MAAc,EAAUC,KAAqB,EAC7CC,QAAmB,EACnBC,EAAe;IAJf,KAAAL,WAAW,GAAXA,WAAW;IACX,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAC7B,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,EAAE,GAAFA,EAAE;IAXX,KAAAC,SAAS,GAAW,EAAE;IAC7B,KAAAC,YAAY,GAAY,KAAK;IAE7B,KAAAC,SAAS,GAAY,KAAK;IA2EpB,KAAAC,eAAe,GAAIC,WAAmB,IAAI;MACxC,MAAMC,OAAO,GAAG,IAAI,CAACC,SAAS,EAAEC,GAAG,CAACH,WAAW,CAAC;MAChD,OAAOC,OAAO,GAAGA,OAAO,CAACG,OAAO,IAAIH,OAAO,CAACI,OAAO,GAAG,KAAK;IAC/D,CAAC;IAED,KAAAC,QAAQ,GAAG,CAACN,WAAmB,EAAEO,SAAiB,KAAI;MAClD,MAAMN,OAAO,GAAG,IAAI,CAACC,SAAS,EAAEC,GAAG,CAACH,WAAW,CAAC;MAChD,OAAOC,OAAO,GAAGA,OAAO,CAACK,QAAQ,CAACC,SAAS,CAAC,GAAG,KAAK;IACxD,CAAC;EA1EO;EAENC,QAAQA,CAAA;IACN,IAAI,CAACN,SAAS,GAAG,IAAI,CAACP,EAAE,CAACc,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAEvB,UAAU,CAACwB,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEzB,UAAU,CAACwB,QAAQ;KACnC,CAAC;IACF,IAAI,CAACf,SAAS,GAAG,IAAI,CAACH,KAAK,CAACoB,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG;EACtE;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACb,SAAS,CAACc,KAAK,EAAE;MACxB,IAAI,CAACC,eAAe,CAAC,IAAI,CAACf,SAAS,CAACgB,KAAK,CAAC;;EAE9C;EAEAD,eAAeA,CAACE,cAAmB;IACjC,IAAI,CAACC,OAAO,GAAC,IAAI;IACjB,MAAMC,SAAS,GAAU;MACrBX,QAAQ,EAAES,cAAc,CAACT,QAAQ;MACjCE,QAAQ,EAAEO,cAAc,CAACP;KAC5B;IACD,MAAMU,MAAM,GAAG,OAAO;IACtB,IAAI,CAAChC,WAAW,CAACiC,SAAS,CAACD,MAAM,EAAED,SAAS,CAAC,CAACG,SAAS,CAAC;MACpDC,IAAI,EAAGC,QAAuB,IAAI;QAChC,IAAI,CAACN,OAAO,GAAC,KAAK;QAChB,IAAI,CAACM,QAAQ,CAACC,KAAK,EAAE;UACjB,IAAI,CAACC,WAAW,CAAC,uBAAuB,CAAC;SAC5C,MAAM;UACL,IAAI,CAACtC,WAAW,CAACuC,WAAW,CAAC,SAAS,GAAGH,QAAQ,CAACC,KAAK,EAACD,QAAQ,CAACI,EAAE,EAACJ,QAAQ,CAACK,QAAQ,CAAC;UACrF,IAAI,CAACvC,MAAM,CAACwC,QAAQ,CAAC,CAAC,IAAI,CAACpC,SAAS,CAAC,CAAC,CAACqC,IAAI,CAAC,MAAK;YAC/C,IAAI,CAACC,eAAe,EAAE;UACvB,CAAC,CAAC;;MAEV,CAAC;MACDC,KAAK,EAAGC,GAAsB,IAAI;QAE9B,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;UACpB,IAAI,CAACT,WAAW,CAAC,iBAAiB,CAAC;SACtC,MAAM,IAAIQ,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3B,IAAI,CAACT,WAAW,CAAC,4BAA4B,CAAC;SACjD,MAAM,IAAIQ,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;UAE3B,IAAI,CAACT,WAAW,CAAC,sCAAsC,CAAC;SAC3D,MAAM,IAAGQ,GAAG,CAACC,MAAM,KAAK,CAAC,EAAC;UACzB,IAAI,CAACT,WAAW,CAAC,yCAAyC,CAAC;SAC5D,MACI;UACD,IAAI,CAACA,WAAW,CAAC,+BAA+B,CAAC;;MAEzD;KACH,CAAC;EACN;EAEQA,WAAWA,CAACU,OAAe;IAC/B,IAAI,CAACC,YAAY,GAAGD,OAAO;IAC3B,IAAI,CAACxC,SAAS,GAAG,IAAI;IACrB0C,UAAU,CAAC,MAAK;MACZ,IAAI,CAACD,YAAY,GAAG,EAAE;MACtB,IAAI,CAACzC,SAAS,GAAG,KAAK;IAC1B,CAAC,EAAE,IAAI,CAAC;IACR,IAAI,CAACsB,OAAO,GAAC,KAAK;EAEtB;EAaEc,eAAeA,CAAA;IACbO,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACC,IAAI;EAC7C;CAEX;AA9FYvD,cAAc,GAAAwD,UAAA,EAL1B1D,SAAS,CAAC;EACT2D,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW3D,cAAc,CA8F1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}