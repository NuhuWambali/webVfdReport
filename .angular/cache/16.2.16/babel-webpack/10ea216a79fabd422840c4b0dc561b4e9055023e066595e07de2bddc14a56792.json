{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './authentication/login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/angular-jwt\";\nexport function tokenGetter() {\n  return localStorage.getItem(\"token\");\n}\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, HttpClientModule, AuthenticationModule, JwtModule.forRoot({\n        config: {\n          tokenGetter: tokenGetter,\n          allowedDomains: [\"localhost:5001\"],\n          disallowedRoutes: []\n        }\n      })]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, LoginComponent],\n    imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, RouterLink, HttpClientModule, AuthenticationModule, i1.JwtModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","AppRoutingModule","AppComponent","LoginComponent","ReactiveFormsModule","RouterLink","HttpClientModule","AuthenticationModule","JwtModule","tokenGetter","localStorage","getItem","AppModule","bootstrap","forRoot","config","allowedDomains","disallowedRoutes","declarations","imports","i1"],"sources":["D:\\Web Corporation Ltd\\webVfd-Report\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './authentication/login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NavbarComponent } from './components/layouts/navbar/navbar.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"token\");\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    RouterLink,\n    HttpClientModule,\n    AuthenticationModule,\n    JwtModule.forRoot({\n      config: {\n          tokenGetter: tokenGetter,\n          allowedDomains: [\"localhost:5001\"],\n          disallowedRoutes: []\n      }\n  }),\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,QAAQ,wCAAwC;AACvE,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,oBAAoB,QAAQ,wCAAwC;AAC7E,SAASC,SAAS,QAAQ,oBAAoB;;;AAG9C,OAAM,SAAUC,WAAWA,CAAA;EACzB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC;AA0BA,OAAM,MAAOC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRX,YAAY;IAAA;EAAA;;;gBAhBtBF,aAAa,EACbC,gBAAgB,EAChBG,mBAAmB,EAEnBE,gBAAgB,EAChBC,oBAAoB,EACpBC,SAAS,CAACM,OAAO,CAAC;QAChBC,MAAM,EAAE;UACJN,WAAW,EAAEA,WAAW;UACxBO,cAAc,EAAE,CAAC,gBAAgB,CAAC;UAClCC,gBAAgB,EAAE;;OAEzB,CAAC;IAAA;EAAA;;;2EAMSL,SAAS;IAAAM,YAAA,GAtBlBhB,YAAY,EACZC,cAAc;IAAAgB,OAAA,GAGdnB,aAAa,EACbC,gBAAgB,EAChBG,mBAAmB,EACnBC,UAAU,EACVC,gBAAgB,EAChBC,oBAAoB,EAAAa,EAAA,CAAAZ,SAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}